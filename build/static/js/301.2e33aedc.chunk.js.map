{"version":3,"file":"static/js/301.2e33aedc.chunk.js","mappings":"6JACA,SAAgB,QAAU,wBAAwB,YAAc,4BAA4B,OAAS,uBAAuB,SAAW,yBAAyB,QAAU,wBAAwB,KAAO,qBAAqB,QAAU,yB,uBCGxO,MAgBA,EAhBqBA,IACjB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OACIC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOC,QAAQJ,UAC3BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOE,KAAMC,IAAI,4DAErCL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOI,OAAS,IAAMJ,EAAOK,OAAOR,UAChDC,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAIb,EAAKG,SAAEJ,EAAMe,WAE5B,ECAd,EAXiBf,IAGbK,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOS,QAAQZ,SAC1BJ,EAAMgB,Y,sDCgBnB,MAAMC,GAAsBC,EAAAA,EAAAA,GAAU,CAClCC,KAAM,cADkBD,EAdNlB,IAClB,IAAIoB,GAAeC,EAAAA,EAAAA,GAAiB,KACpC,OACIhB,EAAAA,EAAAA,KAAA,OAAAD,UACID,EAAAA,EAAAA,MAAA,QAAMmB,SAAUtB,EAAMuB,aAAanB,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAOC,SAAU,CAACC,EAAAA,EAAUR,GAAeL,KAAK,UAAUc,YAAY,0BAE5FxB,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAEV,IAoCd,QA3BeJ,IACX,IAAI8B,EAAiB9B,EAAM+B,YAAYC,QAAQC,KAAIC,IAAM7B,EAAAA,EAAAA,KAAC8B,EAAW,CAAajC,GAAIgC,EAAGhC,GAAKa,KAAMmB,EAAGnB,MAA5BmB,EAAGhC,MAC1EkC,EAAkBpC,EAAM+B,YAAYf,QAAQiB,KAAIC,IAAM7B,EAAAA,EAAAA,KAACgC,EAAO,CAAanC,GAAIgC,EAAGhC,GAAKc,QAASkB,EAAGlB,SAA/BkB,EAAGhC,MAE3E,IAAoB,IAAjBF,EAAMsC,OACL,OAAOjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CAACzB,GAAG,WAOxB,OACIX,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAOyB,QAAQ5B,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOiC,YAAYpC,SAC7B0B,KAEN3B,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAOkC,SAASrC,SAAA,CAC1BgC,GACN/B,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACY,EAAmB,CAACK,SAZjBoB,IACZ1C,EAAM2C,WAAWD,EAAM1B,QAAQ,WAczB,E,cC9Cd,MAUA,GAAe4B,E,QAAAA,KACbC,EAAAA,EAAAA,KAXuBC,IAAK,CAC5Bf,YAAae,EAAMf,gBAGOgB,IAAQ,CAClCJ,WAAa3B,IACX+B,GAASC,EAAAA,EAAAA,GAAwBhC,GAAS,MAM5CiC,EAAAA,EAFF,CAGEC,E,6ECfF,IAAIC,EAA+BL,IAAK,CACpCR,OAAQQ,EAAMM,KAAKd,SAGZW,EAAmBI,IAC1B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAyB,IAAtBC,KAAKzD,MAAMsC,QACHjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAQ,CAACzB,GAAG,YAEjBT,EAAAA,EAAAA,KAACgD,EAAS,IAAKI,KAAKzD,OAC/B,EAKJ,OAFqC6C,EAAAA,EAAAA,IAAQM,EAARN,CAAqCS,EAErC,C","sources":["webpack://my-app/./src/Components/Dialogs/Dialog.module.css?a572","Components/Dialogs/DialogItems/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.js","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__KJdlT\",\"dialogItems\":\"Dialog_dialogItems__+Jx7m\",\"active\":\"Dialog_active__HjqiN\",\"messages\":\"Dialog_messages__DCqQk\",\"message\":\"Dialog_message__-F+-I\",\"icon\":\"Dialog_icon__WqiWY\",\"mainIcn\":\"Dialog_mainIcn__34Jl7\"};","import React  from \"react\";\nimport module from './../Dialog.module.css'\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItems = (props) => {\n    let path = '/dialog/' + props.id\n    return(\n        <div>\n            <div className={module.mainIcn}>\n                <img className={module.icon} src='https://static.thenounproject.com/png/801408-200.png' />\n            </div>\n            <div className={module.dialog + ' ' + module.active}>\n                <NavLink to={path}>{props.name}</NavLink>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default DialogItems;","import React  from \"react\";\nimport module from './../Dialog.module.css'\n\nconst Message = (props) => {\n\n    return(\n    <div>\n        <div className={module.message}>\n            {props.message}\n        </div>\n    </div>\n    )\n}\n\nexport default Message;","import React  from \"react\";\nimport module from './Dialog.module.css'\nimport DialogItems from \"./DialogItems/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../utils/validators\";\nimport { Input } from \"../common/FormsControls/FormsConstrol\";\n\n\nlet AddMessageForm = (props) => {\n    let maxLength100 = maxLengthCreator(100)\n    return(\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field component={Input} validate={[required, maxLength100]} name=\"message\" placeholder=\"input your message\" />\n                </div>\n                <button>Send</button>\n            </form>\n        </div>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm({\n    form: 'addMessage'\n})(AddMessageForm)\n\n\nlet Dialogs = (props) => {\n    let dialogsElement = props.dialogsPage.dialogs.map(el => <DialogItems key={el.id} id={el.id}  name={el.name} />)\n    let messagesElement = props.dialogsPage.message.map(el => <Message key={el.id} id={el.id}  message={el.message} />)\n\n    if(props.isAuth === false){\n        return <Navigate to=\"/login\"/>\n    }\n\n    let onSubmit = (value) => {\n        props.AddMessage(value.message)\n    }\n\n    return(\n        <div className={module.dialogs}>\n            <div className={module.dialogItems}>\n                { dialogsElement }\n            </div>\n            <div className={module.messages}>\n                { messagesElement }\n            <div>\n                <AddMessageReduxForm onSubmit={onSubmit} />\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import { connect } from \"react-redux\";\nimport { addMessageActionCreator, onMessageChangeActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { withAuthRedirec } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => ({\n  dialogsPage: state.dialogsPage\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  AddMessage: (message) => {\n    dispatch(addMessageActionCreator(message));\n  },\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirec\n)(Dialogs)","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsWithRedirect = (state) => ({\n    isAuth: state.auth.isAuth \n});\n\nexport let withAuthRedirec = (Component) => {\n    class RedirectComponent extends React.Component{\n        render(){\n            if(this.props.isAuth === false){\n                return <Navigate to=\"/login\"/>\n            }\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsWithRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}"],"names":["props","path","id","_jsxs","children","_jsx","className","module","mainIcn","icon","src","dialog","active","NavLink","to","name","message","AddMessageReduxForm","reduxForm","form","maxLength100","maxLengthCreator","onSubmit","handleSubmit","Field","component","Input","validate","required","placeholder","dialogsElement","dialogsPage","dialogs","map","el","DialogItems","messagesElement","Message","isAuth","Navigate","dialogItems","messages","value","AddMessage","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirec","Dialogs","mapStateToPropsWithRedirect","auth","Component","RedirectComponent","React","render","this"],"sourceRoot":""}