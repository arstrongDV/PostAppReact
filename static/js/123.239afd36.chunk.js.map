{"version":3,"file":"static/js/123.239afd36.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Components/Profile/MyPosts/MyPost.module.css?e34d","webpack://my-app/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPost.jsx","Components/Profile/MyPosts/MyPostContainer.js","webpack://my-app/./src/Components/Profile/ProfileInfo/Profile.module.css?ad2f","Components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainBlock\":\"MyPost_mainBlock__6AKJN\",\"posts\":\"MyPost_posts__uJnHa\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__4hswY\"};","import React from \"react\";\nimport module from './Post.module.css'\n\nlet Post = (props) => {\n    return (\n        <div className={module.item}>\n            <img src='https://static.thenounproject.com/png/801408-200.png' />\n            {props.message}\n            <div>\n                <span>Like: {props.likesCount}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\";\nimport module from './MyPost.module.css'\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { required, maxLengthCreator } from \"../../../utils/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsConstrol\";\n\nlet maxLength30 =  maxLengthCreator(20);\n\nlet PostForm = (props) => {\n    return(\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <Field \n                    component={Textarea} \n                    name='post' \n                    placeholder=\"input your post text\" \n                    validate={[required, maxLength30]} />\n                <button>Post</button>\n            </form>\n        </div>\n    )\n}\n\nlet PostReduxForm = reduxForm({\n    form: 'addPost'\n})(PostForm)\n\nlet MyPost = React.memo(props => {\n    console.log(\"RENDER\")\n    let postsElement = [...props.post].reverse().map(el => <Post key={el.id} id={el.id} \n        message={el.message} \n        likesCount={el.likesCount} />)\n\n    let addPost = (value) => {\n        props.addPost(value.post)\n    }\n        \n    return(\n        <div className={module.mainBlock}>\n            <div>\n                <PostReduxForm onSubmit={addPost} />\n            </div>\n            <br/>\n            Posts\n            <div className={module.posts}>\n                { postsElement }\n            </div>\n        </div>\n    )\n});\n\nexport default MyPost;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPost from \"./MyPost\";\n\nconst mapStateToProps = (state) => ({\n  newPostText: state.profilePage.newPostText,\n  post: state.profilePage.post\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (post) => {\n    dispatch(addPostActionCreator(post));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPost);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Profile_item__w6ddg\",\"descriptionBlock\":\"Profile_descriptionBlock__STEWG\"};","import React, {useEffect, useState} from \"react\";\nimport style from '../ProfileInfo/Profile.module.css'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status] )\n\n    const activatedEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivatedEditMode = () => {\n        setEditMode(false)\n        props.putNewStatusThunk(status)\n    }\n\n    const textChange = (e) => {\n        setStatus(e.currentTarget.value) \n    }\n\n    return(\n            <div>\n                <div className={style.descriptionBlock}>\n                    {!editMode ? \n                        <div>\n                            <h2 onDoubleClick={activatedEditMode}>{props.status === '' ? '----' : props.status}</h2>\n                        </div>\n                        :\n                        <div>\n                            <input \n                                value={status} \n                                onChange={textChange}\n                                onBlur={deactivatedEditMode} \n                                autoFocus={true}\n                            ></input>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport module from  './Profile.module.css'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport icone from './../../../assets/images/defult_icon.jpg'\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\nimport { useNavigate } from \"react-router-dom\";\n\nlet ProfileInfo = (props) => {\n    const navigate = useNavigate();\n    let GoBack = () => {\n        navigate('/users')\n    }\n\n    if(!props.profile){\n        return <Preloader />\n    }\n\n    return(\n        <div>\n            <div>\n                <img src='https://thumbs.dreamstime.com/b/ladybugs-на-оранжевом-цветке-весны-полет-насекомого-художническое-125140826.jpg' />\n            </div>\n           <br />\n           <button onClick={GoBack} >Back</button>\n           <br />\n            <div className={module.descriptionBlock}>\n                { props.profile.photos.large !== null ? \n                <img src={props.profile.photos.large} />\n                :\n                <img src={icone} />\n                }\n                <br/>\n                <h1>{props.profile.fullName}</h1>\n                <h3>{props.profile.aboutMe}</h3>\n                <div>\n                    <ProfileStatusWithHooks status={props.status} putNewStatusThunk={props.putNewStatusThunk} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nlet Profile = (props) => {\n    return(\n        <div>\n            <ProfileInfo \n                profile={props.profile} \n                status={props.status} \n                putNewStatusThunk={props.putNewStatusThunk} \n            />\n            <MyPostContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { getProfileThunkCreator, getProfileStatusThunk, putNewStatusThunk } from \"../../redux/profile-reducer\";\nimport { connect } from \"react-redux\";\nimport withRouter from '../../hoc/withRouter';\nimport { withAuthRedirec } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { Navigate } from \"react-router-dom\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.params.userId; \n        if(!userId){\n            userId = 31651\n            // userId = this.props.id\n            // if(!userId){\n            //     <Navigate to={'/login'} />\n            // }\n        }\n        this.props.getProfileThunkCreator(userId)\n        this.props.getProfileStatusThunk(userId)\n    }\n\n    render() {\n        return (\n            <Profile \n                    {...this.props} \n                    profile={this.props.profile} \n                    status={this.props.status}\n                    putNewStatusThunk={this.props.putNewStatusThunk}\n            />\n        );\n    }\n}\n\nlet AuthRedirectComponent = withAuthRedirec(ProfileContainer)\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    id: state.auth.id,\n    isAuth: state.auth.isAuth\n});\n\nlet WithRouterDataContainertComponent = withRouter(AuthRedirectComponent)\n\nexport default compose(\n    connect(mapStateToProps, { getProfileThunkCreator, getProfileStatusThunk, putNewStatusThunk }),\n    withAuthRedirec\n  )(WithRouterDataContainertComponent)","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsWithRedirect = (state) => ({\n    isAuth: state.auth.isAuth \n});\n\nexport let withAuthRedirec = (Component) => {\n    class RedirectComponent extends React.Component{\n        render(){\n            if(this.props.isAuth === false){\n                return <Navigate to=\"/login\"/>\n            }\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsWithRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}"],"names":["props","_jsxs","className","module","children","_jsx","src","message","likesCount","maxLength30","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","React","console","log","postsElement","post","reverse","map","el","Post","id","value","addPost","connect","state","newPostText","profilePage","dispatch","addPostActionCreator","MyPost","editMode","setEditMode","useState","status","setStatus","useEffect","style","onChange","e","currentTarget","onBlur","deactivatedEditMode","putNewStatusThunk","autoFocus","onDoubleClick","activatedEditMode","navigate","useNavigate","profile","onClick","GoBack","photos","large","icone","fullName","aboutMe","ProfileStatusWithHooks","Preloader","ProfileInfo","MyPostContainer","ProfileContainer","componentDidMount","userId","this","params","getProfileThunkCreator","getProfileStatusThunk","render","Profile","AuthRedirectComponent","withAuthRedirec","WithRouterDataContainertComponent","withRouter","compose","auth","isAuth","mapStateToPropsWithRedirect","Component","RedirectComponent","Navigate","to"],"sourceRoot":""}